name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r thoughts_app_service/requirements.txt
      - name: Lint with Black
        run: |
          pip install black
          black --check thoughts_app_service/thoughts_app
      - name: Lint with isort
        run: |
          pip install isort
          isort --check-only thoughts_app_service/thoughts_app
      - name: Prepare environment file
        run: |
          echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> thoughts_app_service/.env
          echo "DEBUG=${{ secrets.DJANGO_DEBUG }}" >> thoughts_app_service/.env
          echo "ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> thoughts_app_service/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> thoughts_app_service/.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> thoughts_app_service/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> thoughts_app_service/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> thoughts_app_service/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> thoughts_app_service/.env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> thoughts_app_service/.env
      - name: Prepare Docker Compose
        run: |
          docker build -t thoughts_app_service -f thoughts_app_service/Dockerfile thoughts_app_service/
      - name: Run Django tests inside Docker compose
        run: |
          docker compose run --rm web python thoughts_app/manage.py test thoughts_core thoughts_app

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker image
        run: docker build -t thoughts_app_service -f thoughts_app_service/Dockerfile .
      - name: Prepare environment file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          # Add other necessary environment variables
      - name: Deploy to VPS
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ${USER}@${HOST}:/path/to/project
          scp -o StrictHostKeyChecking=no .env ${USER}@${HOST}:/path/to/project
          scp -o StrictHostKeyChecking=no thoughts_app_service/Dockerfile ${USER}@${HOST}:/path/to/project/thoughts_app_service
          ssh -o StrictHostKeyChecking=no ${USER}@${HOST} "cd /path/to/project && docker-compose down && docker-compose up -d --build"
        env:
          USER: ${{ secrets.SERVER_SSH_USER }}
          HOST: ${{ secrets.SERVER_IP }}
